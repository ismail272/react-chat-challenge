{"version":3,"sources":["components/Sidebar/style.module.css","components/Messages/MessagesBody/style.module.css","components/Messages/SendMessages/style.module.css","components/App/Avatar/style.module.css","components/App/style.module.css","components/Messages/style.module.css","reportWebVitals.js","redux/ducks/application.js","redux/ducks/contacts.js","components/utils/scrollMessagges.js","redux/ducks/messages.js","redux/configureStore.js","components/App/Avatar/Avatar.jsx","components/Sidebar/Contact.jsx","components/Sidebar/SkeletonLoader.jsx","components/Sidebar/SearchContacts.jsx","components/Sidebar/index.jsx","components/Messages/MessagesBody/Inbox.jsx","components/Messages/MessagesBody/IsRead.jsx","components/Messages/MessagesBody/Outbox.jsx","components/Messages/MessagesBody/TextMessage.jsx","components/Messages/MessagesBody/Infobox.jsx","components/Messages/MessagesBody/ItemMessage.jsx","components/Messages/MessagesBody/index.jsx","components/Messages/SendMessages/ButtonScrip.jsx","components/Messages/SendMessages/ButtonMicrophoneSend.jsx","components/Messages/SendMessages/SendMessages.jsx","components/Messages/HeaderMessages/PreloaderNameAndOnlineMessages.jsx","components/Messages/HeaderMessages/MessagesHeaderName.jsx","components/Messages/HeaderMessages/ClearSearchMessages.jsx","components/Messages/HeaderMessages/OpenBlockProfile.jsx","components/Messages/HeaderMessages/HeaderMessages.jsx","components/Messages/index.jsx","components/Profile/Connection.jsx","components/Profile/Social.jsx","components/Profile/Media.jsx","components/Profile/index.jsx","components/App/index.jsx","index.jsx","components/Profile/style.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","loading","myId","openProfile","filter","items","setFilterText","text","type","payload","scrollChatDown","chatWindow","document","getElementById","scrollTop","scrollHeight","opened","setFilterMessages","logger","createLogger","diff","collapsed","store","createStore","combineReducers","application","state","action","_id","messages","tempMessage","sending","map","item","ranId","contacts","applyMiddleware","thunk","Avatar","size","fullname","online","className","style","imageBlock","defaultProps","Contact","contact","openContactId","useParams","link","to","contactActive","contentBlock","fullName","lastMessage","content","length","substring","time","moment","format","SkeletonLoader","index","width","height","circle","fullNameLastMessage","SearchContacts","dispatch","useDispatch","useSelector","useHotkeys","inputBlock","search","placeholder","onChange","e","preventDefault","target","value","deleteSearch","onClick","Chats","toUpperCase","indexOf","useEffect","fetch","response","json","chats","Inbox","message","find","inbox","inboxMessage","date","IsRead","isRead","Outbox","outBox","outBoxMessage","dateCheck","read","TextMessage","toUserId","Infobox","infoBox","ItemMessage","MessagesBody","toLowerCase","includes","messagesBody","id","ButtonScrip","mediaIcon","ButtonMicrophoneSend","sentMessage","SwitchTransition","CSSTransition","timeout","classNames","SendMessages","useState","setContent","contactId","Math","floor","random","method","body","JSON","stringify","headers","sendMessage","event","form","TextareaAutosize","sendForm","maxrows","PreloaderNameAndOnlineMessages","wrapLoaderAndText","preloaderHeader","autorenewPreloaderHeader","headLoaderText","MessagesHeaderName","openProfileName","NameHeaderContact","headerNameAndOnline","headerName","messagesHeaderOnline","ClearSearchMessages","clear","clearSearch","OpenBlockProfile","settingsHeaderMessages","HeaderMessages","loadingHeaderMessages","headerMessages","SearchAndInput","iconSearchMessages","AiOutlineSearch","InputHeaderMessages","Messages","loadMessages","selectChat","PreloaderChatMessages","Connection","profileContactIcons","phone","videoCam","envelope","Social","socials","profileSocial","headSocial","messenger","wrapMessenger","IconsAndSocialNickname","instagram","twitter","facebook","Media","headMedia","ImgPdfMedia","imgMedia","pdf","Profile","openProfileInfo","profile","profileOpen","profileClose","profileNameEmail","profileName","nick","username","App","appWrapper","path","ReactDOM","render"],"mappings":"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","file":"static/js/main.f410470b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chats\":\"style_chats__FIeVT\",\"inputBlock\":\"style_inputBlock__kGq1h\",\"search\":\"style_search__dHGgG\",\"contact\":\"style_contact__3hgU-\",\"fullName\":\"style_fullName__GSIho\",\"link\":\"style_link__1OmgZ\",\"contentBlock\":\"style_contentBlock__sgupI\",\"lastMessage\":\"style_lastMessage__1AEao\",\"time\":\"style_time__1SMXH\",\"deleteSearch\":\"style_deleteSearch__JKXHD\",\"contactActive\":\"style_contactActive__jDH1K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inbox\":\"style_inbox__3GHTZ\",\"inboxMessage\":\"style_inboxMessage__1rm2z\",\"content\":\"style_content__1pYYo\",\"date\":\"style_date__1wO4n\",\"outBox\":\"style_outBox__3AfFv\",\"outBoxMessage\":\"style_outBoxMessage__j8Y28\",\"wrapDateCheck\":\"style_wrapDateCheck__2pI3j\",\"dateCheck\":\"style_dateCheck__3p0us\",\"infoBox\":\"style_infoBox___AC45\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"style_form__1s9hW\",\"sendForm\":\"style_sendForm__2cEXW\",\"mediaIcon\":\"style_mediaIcon__2a6Zx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageBlock\":\"style_imageBlock__29Dzw\",\"online\":\"style_online__3TBVT\",\"small\":\"style_small__2ZJ4e\",\"medium\":\"style_medium__3eTj8\",\"large\":\"style_large__1gjtU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"style_appWrapper__12-Nj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectChat\":\"style_selectChat__2fWFp\",\"PreloaderChatMessages\":\"style_PreloaderChatMessages__ka17A\",\"wrapLoaderAndText\":\"style_wrapLoaderAndText__1wbKN\",\"preloaderHeader\":\"style_preloaderHeader__eicaG\",\"loaderHeader\":\"style_loaderHeader__17umH\",\"autorenewPreloaderHeader\":\"style_autorenewPreloaderHeader__1Mk81\",\"headLoaderText\":\"style_headLoaderText__Py45x\",\"messages\":\"style_messages__3qQ7q\",\"SearchAndInput\":\"style_SearchAndInput__3Dphg\",\"InputHeaderMessages\":\"style_InputHeaderMessages__jw9Qe\",\"iconSearchMessages\":\"style_iconSearchMessages__JghFK\",\"AiOutlineSearch\":\"style_AiOutlineSearch__3Waox\",\"clear\":\"style_clear__2te8d\",\"clearSearch\":\"style_clearSearch__mD1n0\",\"settingsHeaderMessages\":\"style_settingsHeaderMessages__3CaY2\",\"openProfile\":\"style_openProfile__1zbno\",\"headerName\":\"style_headerName__2qlPu\",\"headerNameAndOnline\":\"style_headerNameAndOnline__2_MXW\",\"messagesHeaderOnline\":\"style_messagesHeaderOnline__2uH_h\",\"headerMessages\":\"style_headerMessages__2AJ7l\",\"messagesBody\":\"style_messagesBody__1Mnfb\"};","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState = {\r\n  loading: false,\r\n  myId: '',\r\n  openProfile: false,\r\n};\r\n\r\nexport default function application(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'profile/toggle':\r\n      return {\r\n        ...state,\r\n        openProfile: !state.openProfile,\r\n      };\r\n    case 'load/profile/start':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case 'load/profile/success':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        myId: action.payload._id,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function profileContactOpen() {\r\n  return { type: 'profile/toggle' };\r\n}\r\n\r\nexport const loadMyId = () => {\r\n  return  (dispatch) => {\r\n    dispatch({ type: 'load/profile/start' });\r\n     fetch(`https://api.intocode.ru:8001/api/profile`)\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        dispatch({\r\n          type: 'load/profile/success',\r\n          payload: json,\r\n        });\r\n      });\r\n  };\r\n};\r\n","const initialState = {\r\n  filter: '',\r\n  items: [],\r\n  loading: true,\r\n};\r\n\r\nexport default function contacts(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'contacts/load/start':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case 'contacts/load/success':\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n        loading: false,\r\n      };\r\n    case 'filter/set':\r\n      return {\r\n        ...state,\r\n        filter: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const setFilterText = (text) => {\r\n  return {\r\n    type: 'filter/set',\r\n    payload: text,\r\n  };\r\n};\r\n\r\nexport const loadContacts = () => {\r\n  return (dispatch) => {\r\n    dispatch({ type: 'contacts/load/start' });\r\n\r\n    fetch(`https://api.intocode.ru:8001/api/contacts`)\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        dispatch({\r\n          type: 'contacts/load/success',\r\n          payload: json,\r\n        });\r\n      });\r\n  };\r\n};\r\n","export const scrollChatDown = () => {\r\n  const chatWindow = document.getElementById('chat-window');\r\n  if (chatWindow) {\r\n    chatWindow.scrollTop = chatWindow.scrollHeight;\r\n  }\r\n};\r\n","import { scrollChatDown } from '../../components/utils/scrollMessagges';\r\n\r\nconst initialState = {\r\n  filter: '',\r\n  loading: true,\r\n  opened: null,\r\n  items: [],\r\n};\r\n\r\nexport default function messages(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'load/messages/start':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        opened: action.payload,\r\n      };\r\n\r\n    case 'load/messages/success':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        items: action.payload,\r\n      };\r\n\r\n    case 'send/message/start':\r\n      const tempMessage = {\r\n        ...action.payload,\r\n        sending: true,\r\n      };\r\n      return {\r\n        ...state,\r\n        items: [...state.items, tempMessage],\r\n      };\r\n\r\n    case 'send/message/success':\r\n      return {\r\n        ...state,\r\n        items: state.items.map((item) => {\r\n          if (item.ranId === action.payload.ranId) {\r\n            return {\r\n              ...item,\r\n              sending: false,\r\n            };\r\n          }\r\n          return item;\r\n        }),\r\n      };\r\n\r\n    case 'filter/messages':\r\n      return {\r\n        ...state,\r\n        filter: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const setFilterMessages = (text) => {\r\n  return {\r\n    type: 'filter/messages',\r\n    payload: text,\r\n  };\r\n};\r\n\r\nexport const loadMessages = (myId, contactId) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: 'load/messages/start', payload: contactId });\r\n\r\n    fetch(`https://api.intocode.ru:8001/api/messages/${myId}/${contactId}`)\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        dispatch({\r\n          type: 'load/messages/success',\r\n          payload: json,\r\n        });\r\n        scrollChatDown();\r\n      });\r\n  };\r\n};\r\n\r\nexport const sendMessage = (myId, contactId, content) => {\r\n  return (dispatch) => {\r\n    const ranId = Math.floor(Math.random() * 100) + 1;\r\n\r\n    dispatch({\r\n      type: 'send/message/start',\r\n      payload: { ranId, contactId, myId, content, type: 'text' },\r\n    });\r\n\r\n    fetch('https://api.intocode.ru:8001/api/messages', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        myId,\r\n        contactId,\r\n        content,\r\n        type: 'text',\r\n      }),\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        dispatch({\r\n          type: 'send/message/success',\r\n          payload: { ranId, ...json },\r\n        });\r\n        scrollChatDown();\r\n      });\r\n  };\r\n};\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport { application, messages, contacts } from './ducks';\r\nimport thunk from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\n\r\nconst logger = createLogger({\r\n  diff: true,\r\n  collapsed: true,\r\n});\r\n\r\nexport const store = createStore(\r\n  combineReducers({ application, messages, contacts }),\r\n  applyMiddleware(thunk, logger),\r\n);\r\n","import PropTypes from 'prop-types';\r\nimport { FaCircle } from 'react-icons/all';\r\nimport style from './style.module.css';\r\n\r\nfunction Avatar({ size, fullname, online }) {\r\n\r\n  return (\r\n    <div className={style.imageBlock}>\r\n      <div className={style[size]}>\r\n        {fullname?.fullname[0]}\r\n        {online ? <FaCircle className={style.online} /> : ''}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nAvatar.propTypes = {\r\n  size: PropTypes.string,\r\n  fullname: PropTypes.object,\r\n  online: PropTypes.bool,\r\n};\r\n\r\nAvatar.defaultProps = {\r\n  size: 'medium',\r\n  online: false,\r\n};\r\n\r\nexport default Avatar;\r\n","import { Link, useParams } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport Avatar from '../App/Avatar/Avatar';\r\nimport style from './style.module.css';\r\n\r\nfunction Contact({ contact }) {\r\n  const openContactId = useParams()._id;\r\n\r\n  const cutMessage = (text) => {\r\n    if (text?.length > 10) {\r\n      return text.substring(0, 10) + '...';\r\n    }\r\n    return text;\r\n  };\r\n\r\n  return (\r\n    <Link className={style.link} to={`/${contact._id}`}>\r\n      <div\r\n        className={`${style.contact}\r\n        ${contact._id === openContactId && style.contactActive}`}\r\n      >\r\n        <Avatar size={'medium'} fullname={contact} online={contact.online} />\r\n        <div className={style.contentBlock}>\r\n          <div>\r\n            <div className={style.fullName}>{contact.fullname}</div>\r\n            <div className={style.lastMessage}>\r\n              {cutMessage(contact.lastMessage?.content)}\r\n            </div>\r\n          </div>\r\n          <div className={style.time}>\r\n            {moment(contact.lastMessage?.time).format('hh:mm')}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import Skeleton from 'react-loading-skeleton';\r\nimport style from './style.module.css';\r\n\r\nfunction SkeletonLoader() {\r\n  const skeleton = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\n  return skeleton.map((index) => {\r\n    return (\r\n      <div className={style.contact} key={index}>\r\n        <Skeleton width={50} height={50} circle={true} />\r\n        <div className={style.contentBlock}>\r\n          <div className={style.fullNameLastMessage}>\r\n            <div className={style.fullName}>\r\n              <Skeleton width={200} height={10} />\r\n            </div>\r\n            <div className={style.lastMessage}>\r\n              <Skeleton width={150} height={10} />\r\n            </div>\r\n          </div>\r\n          <div className={style.time}>\r\n            <Skeleton width={35} height={10} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n}\r\n\r\nexport default SkeletonLoader;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { setFilterText } from '../../redux/ducks/contacts';\r\nimport { useHotkeys } from 'react-hotkeys-hook';\r\nimport { AiOutlineSearch, MdClear } from 'react-icons/all'\r\nimport style from './style.module.css';\r\n\r\nfunction SearchContacts() {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector((state) => state.contacts.filter);\r\n\r\n  const handleDeleteText = () => {\r\n    dispatch(setFilterText(''));\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault()\r\n    dispatch(setFilterText(e.target.value));\r\n  };\r\n\r\n  useHotkeys('shift+t', () => {\r\n    dispatch(setFilterText(''));\r\n  });\r\n\r\n  return (\r\n\r\n      <div className={style.inputBlock}>\r\n        <div className={style.search}>\r\n          <div className=\"icon\">\r\n            <AiOutlineSearch />\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search contact\"\r\n            onChange={handleSearch}\r\n            value={filter}\r\n          />\r\n          <div className={style.deleteSearch} onClick={handleDeleteText}>\r\n            {filter ? <MdClear /> : ''}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default SearchContacts;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { loadContacts } from '../../redux/ducks/contacts';\r\nimport { useEffect } from 'react';\r\nimport Contact from './Contact';\r\nimport SkeletonLoader from './SkeletonLoader';\r\nimport SearchContacts from './SearchContacts';\r\nimport style from './style.module.css';\r\n\r\nfunction Chats() {\r\n  const loading = useSelector((state) => state.contacts.loading);\r\n\r\n  const contacts = useSelector((state) => {\r\n    const filter = state.contacts.filter\r\n\r\n    return state.contacts.items.filter((contact) => {\r\n      return (\r\n        contact.fullname?.toUpperCase().indexOf(filter.toUpperCase()) !== -1\r\n      );\r\n    });\r\n  })\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(loadContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className={style.chats}>\r\n      <SearchContacts />\r\n      {loading ? (\r\n        <SkeletonLoader />\r\n      ) : (\r\n        contacts.map((contact) => {\r\n          return <Contact contact={contact} key={contact._id} />;\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chats;\r\n","import PropTypes from 'prop-types';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\nimport Avatar from '../../App/Avatar/Avatar';\r\nimport style from './style.module.css';\r\n\r\nfunction Inbox({ message }) {\r\n  const opened = useParams()._id;\r\n\r\n  const fullname = useSelector((state) =>\r\n    state.contacts.items.find((item) => {\r\n      return item._id === opened;\r\n    }),\r\n  );\r\n\r\n  return (\r\n    <div className={style.inbox}>\r\n      <Avatar size={'small'} fullname={fullname} />\r\n      <div className={style.inboxMessage}>\r\n        <div className={style.content}>{message.content}</div>\r\n        <div className={style.date}>\r\n          <div>{moment(message.time).format('hh:mm')}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nInbox.propTypes = {\r\n  message: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Inbox;\r\n","import { BsCheck, BsCheckAll } from 'react-icons/all';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst IsRead = ({ isRead }) => (isRead ? <BsCheckAll /> : <BsCheck />);\r\n\r\nIsRead.propTypes = {\r\n  isRead: PropTypes.bool,\r\n};\r\n\r\nexport default IsRead;\r\n","import PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport { GrFormClock } from 'react-icons/all';\r\nimport IsRead from './IsRead';\r\nimport style from './style.module.css';\r\n\r\nfunction Outbox({ message }) {\r\n  return (\r\n    <div className={style.outBox}>\r\n      <div className={style.outBoxMessage}>\r\n        <div className={style.content}>{message.content}</div>\r\n        <div className={style.dateCheck}>\r\n          <div className={style.date}>\r\n            {moment(message.time).format('hh:mm')}\r\n          </div>\r\n          {message.sending ? <GrFormClock /> : <IsRead read={message.read} />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nOutbox.propTypes = {\r\n  message: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Outbox;\r\n","import PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport Inbox from './Inbox';\r\nimport Outbox from './Outbox';\r\n\r\nfunction TextMessage({ message }) {\r\n  const myId = useSelector((state) => state.application.myId);\r\n\r\n  const isOutgoing = message.toUserId === myId;\r\n\r\n  if (isOutgoing) {\r\n    return <Inbox message={message} />;\r\n  }\r\n\r\n  return <Outbox message={message} />;\r\n}\r\n\r\nTextMessage.propTypes = {\r\n  message: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default TextMessage;\r\n","import PropTypes from 'prop-types';\r\nimport style from './style.module.css';\r\n\r\nfunction Infobox({ content }) {\r\n  return <div className={style.infoBox}>{content}</div>;\r\n}\r\n\r\nInfobox.propTypes = {\r\n  content: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Infobox;\r\n","import PropTypes from 'prop-types';\r\nimport TextMessage from './TextMessage';\r\nimport Infobox from './Infobox';\r\n\r\nfunction ItemMessage({ message }) {\r\n  if (message.type === 'text') {\r\n    return <TextMessage message={message} />;\r\n  }\r\n\r\n  return <Infobox content={message.content} />;\r\n}\r\n\r\nItemMessage.propTypes = {\r\n  message: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ItemMessage;\r\n","import { useSelector } from 'react-redux';\r\nimport ItemMessage from './ItemMessage';\r\nimport style from '../style.module.css';\r\n\r\nfunction MessagesBody() {\r\n  const { loading, items, filter } = useSelector((state) => state.messages);\r\n\r\n  const messages = items.filter((message) =>\r\n    message.content.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n\r\n  return (\r\n    <div className={style.messagesBody} id=\"chat-window\">\r\n      {!loading &&\r\n        messages.map((message) => {\r\n          return <ItemMessage key={message._id} message={message} />;\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessagesBody;\r\n","import { AiOutlinePaperClip } from 'react-icons/all';\r\nimport style from './style.module.css'\r\n\r\nfunction ButtonScrip() {\r\n  return (\r\n    <button className={style.mediaIcon}>\r\n      <AiOutlinePaperClip />\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default ButtonScrip;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition, SwitchTransition } from 'react-transition-group';\r\nimport { IoIosSend, TiMicrophone } from 'react-icons/all';\r\nimport style from './style.module.css'\r\n\r\nfunction ButtonMicrophoneSend({ message, sentMessage }) {\r\n  return (\r\n    <button className=\"send click\">\r\n      <SwitchTransition>\r\n        <CSSTransition key={message} timeout={100} classNames=\"sendIcon\">\r\n          <div className={style.mediaIcon} onClick={sentMessage}>\r\n            {message ? <IoIosSend /> : <TiMicrophone />}\r\n          </div>\r\n        </CSSTransition>\r\n      </SwitchTransition>\r\n    </button>\r\n  );\r\n}\r\n\r\nButtonMicrophoneSend.propTypes = {\r\n  message: PropTypes.bool,\r\n  sentMessage: PropTypes.func,\r\n};\r\n\r\nexport default ButtonMicrophoneSend;\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { sendMessage } from '../../../redux/ducks/messages';\r\nimport { useHotkeys } from 'react-hotkeys-hook';\r\nimport { TextareaAutosize } from '@material-ui/core';\r\nimport ButtonScrip from './ButtonScrip';\r\nimport ButtonMicrophoneSend from './ButtonMicrophoneSend';\r\nimport style from './style.module.css';\r\n\r\nfunction SendMessages() {\r\n  const dispatch = useDispatch();\r\n  const opened = useParams()._id;\r\n  const myId = useSelector((state) => state.application.myId);\r\n\r\n  const [content, setContent] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setContent(e.target.value);\r\n  };\r\n\r\n  const sentMessage = () => {\r\n    if (content?.length === 0) return;\r\n    dispatch(sendMessage(opened, myId, content));\r\n    setContent('');\r\n  };\r\n\r\n  useHotkeys('shift+enter', (event) => {\r\n    event.preventDefault();\r\n    setContent((content) => content + '\\n');\r\n  });\r\n\r\n  useHotkeys(\r\n    'enter',\r\n    (e) => {\r\n      e.preventDefault();\r\n      sentMessage();\r\n    },\r\n    [content],\r\n  );\r\n\r\n  return (\r\n    <div className={style.form}>\r\n      <TextareaAutosize\r\n        onChange={handleChange}\r\n        value={content}\r\n        className={style.sendForm}\r\n        placeholder=\"Write a message...\"\r\n        maxrows=\"5\"\r\n      />\r\n      <ButtonScrip />\r\n      <ButtonMicrophoneSend\r\n        sentMessage={sentMessage}\r\n        message={content?.length > 0}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SendMessages;\r\n","import { MdAutorenew } from 'react-icons/all';\r\nimport style from '../style.module.css';\r\n\r\nfunction PreloaderNameAndOnlineMessages() {\r\n  return (\r\n    <div className={style.wrapLoaderAndText}>\r\n      <div className={style.preloaderHeader}>\r\n        <MdAutorenew className={style.autorenewPreloaderHeader} />\r\n      </div>\r\n      <div className={style.headLoaderText}>Загрузка чата</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PreloaderNameAndOnlineMessages;\r\n","import { useParams } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { FaCircle } from 'react-icons/all';\r\nimport style from '../style.module.css';\r\n\r\nfunction MessagesHeaderName() {\r\n  const openProfileName = useParams()._id;\r\n\r\n  const NameHeaderContact = useSelector((state) =>\r\n    state.contacts.items.find((item) => {\r\n      return openProfileName === item._id;\r\n    }),\r\n  );\r\n\r\n  return (\r\n    <div className={style.headerNameAndOnline}>\r\n      <div className={style.headerName}>{NameHeaderContact?.fullname}</div>\r\n      <div>\r\n        {NameHeaderContact?.online ? (\r\n          <FaCircle className={style.messagesHeaderOnline} />\r\n        ) : (\r\n          ''\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessagesHeaderName;\r\n","import { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { setFilterMessages } from '../../../redux/ducks/messages';\r\nimport { useHotkeys } from 'react-hotkeys-hook';\r\nimport { MdClear } from 'react-icons/all';\r\nimport style from '../style.module.css';\r\n\r\nfunction ClearSearchMessages({ filter }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const clearSearchMessages = () => {\r\n    dispatch(setFilterMessages(''));\r\n  };\r\n\r\n  useHotkeys('shift+x', () => {\r\n    dispatch(setFilterMessages(''));\r\n  });\r\n\r\n  return (\r\n    <div className={style.clear}>\r\n      <span onClick={clearSearchMessages}>\r\n        {filter ? <MdClear className={style.clearSearch} /> : ''}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nClearSearchMessages.propTypes = {\r\n  filter: PropTypes.string,\r\n};\r\n\r\nexport default ClearSearchMessages;\r\n","import { useDispatch } from 'react-redux';\r\nimport { profileContactOpen } from '../../../redux/ducks/application';\r\nimport { useHotkeys } from 'react-hotkeys-hook';\r\nimport { IoSettingsSharp } from 'react-icons/all';\r\nimport style from '../style.module.css';\r\n\r\nfunction OpenBlockProfile() {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClickProfile = () => {\r\n    dispatch(profileContactOpen());\r\n  };\r\n\r\n  useHotkeys('shift+p', () => {\r\n    dispatch(profileContactOpen());\r\n  });\r\n\r\n  return (\r\n    <div className={style.settingsHeaderMessages}>\r\n      <IoSettingsSharp\r\n        className={style.openProfile}\r\n        onClick={handleClickProfile}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OpenBlockProfile;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { setFilterMessages } from '../../../redux/ducks/messages';\r\nimport { AiOutlineSearch } from 'react-icons/all';\r\nimport PreloaderNameAndOnlineMessages from './PreloaderNameAndOnlineMessages';\r\nimport MessagesHeaderName from './MessagesHeaderName';\r\nimport ClearSearchMessages from './ClearSearchMessages';\r\nimport OpenBlockProfile from './OpenBlockProfile';\r\nimport style from '../style.module.css';\r\n\r\nfunction HeaderMessages() {\r\n  const dispatch = useDispatch();\r\n  const loadingHeaderMessages = useSelector((state) => state.messages.loading);\r\n  const filter = useSelector((state) => state.messages.filter);\r\n\r\n  const handleSearch = (e) => {\r\n    dispatch(setFilterMessages(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <div className={style.headerMessages}>\r\n      <div className={style.SearchAndInput}>\r\n        <div className={style.iconSearchMessages}>\r\n          <AiOutlineSearch className={style.AiOutlineSearch} />\r\n        </div>\r\n        <div className={style.InputHeaderMessages}>\r\n          <input type=\"text\" onChange={handleSearch} value={filter} placeholder=\"Search\"/>\r\n        </div>\r\n        <ClearSearchMessages filter={filter} />\r\n      </div>\r\n      {loadingHeaderMessages ? (\r\n        <PreloaderNameAndOnlineMessages />\r\n      ) : (\r\n        <MessagesHeaderName />\r\n      )}\r\n      <OpenBlockProfile />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeaderMessages;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { loadMessages } from '../../redux/ducks/messages';\r\nimport { useParams } from 'react-router-dom';\r\nimport Index from './MessagesBody';\r\nimport SendMessages from './SendMessages/SendMessages';\r\nimport HeaderMessages from './HeaderMessages/HeaderMessages';\r\nimport style from './style.module.css';\r\n\r\nfunction Messages() {\r\n  const dispatch = useDispatch();\r\n  const opened = useParams()._id;\r\n\r\n  const myId = useSelector((state) => state.application.myId);\r\n\r\n  useEffect(() => {\r\n    if (opened) {\r\n      dispatch(loadMessages(myId, opened));\r\n    }\r\n  }, [dispatch, opened, myId]);\r\n\r\n  if (!opened) {\r\n    return (\r\n      <div className={style.selectChat}>\r\n        <div className={style.PreloaderChatMessages}>\r\n          Select a chat to start messaging\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={style.messages}>\r\n      <HeaderMessages />\r\n      <Index />\r\n      <SendMessages />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Messages;\r\n","import { IoMdVideocam, IoMdCall, FaEnvelope } from 'react-icons/all';\r\nimport style from './style.module.css';\r\n\r\nfunction Connection() {\r\n  return (\r\n    <div className={style.profileContactIcons}>\r\n      <div className={style.phone}>\r\n        <IoMdCall />\r\n      </div>\r\n      <div className={style.videoCam}>\r\n        <IoMdVideocam />\r\n      </div>\r\n      <div className={style.envelope}>\r\n        <FaEnvelope />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Connection;\r\n","import PropTypes from 'prop-types';\r\nimport {\r\n  AiOutlineInstagram,\r\n  AiOutlineTwitter,\r\n  FaFacebookF,\r\n} from 'react-icons/all';\r\nimport style from './style.module.css';\r\n\r\nfunction Social({ socials }) {\r\n\r\n  return (\r\n    <div className={style.profileSocial}>\r\n      <div className={style.headSocial}>Social</div>\r\n      <div className={style.messenger}>\r\n        <div className={style.wrapMessenger}>\r\n          <div>\r\n            {socials?.socials ? (\r\n              <div className={style.IconsAndSocialNickname}>\r\n                <AiOutlineInstagram />\r\n                <span>{socials?.socials.instagram}</span>\r\n              </div>\r\n            ) : (\r\n              ''\r\n            )}\r\n            {socials?.socials ? (\r\n              <div className={style.IconsAndSocialNickname}>\r\n                <AiOutlineTwitter />\r\n                <span>{socials?.socials.twitter}</span>\r\n              </div>\r\n            ) : (\r\n              ''\r\n            )}\r\n            {socials?.socials ? (\r\n              <div className={style.IconsAndSocialNickname}>\r\n                <FaFacebookF />\r\n                <span>{socials?.socials.facebook}</span>\r\n              </div>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nSocial.propTypes = {\r\n  socials: PropTypes.object,\r\n};\r\n\r\nexport default Social;\r\n","import style from './style.module.css';\r\n\r\nfunction Media() {\r\n  return (\r\n    <>\r\n      <div className={style.headMedia}>Media</div>\r\n      <div className={style.ImgPdfMedia}>\r\n        <div className={style.imgMedia} />\r\n        <div className={style.pdf}>desktop-chat.pdf</div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Media;\r\n","import { useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport Connection from './Connection';\r\nimport Social from './Social';\r\nimport Media from './Media';\r\nimport Avatar from '../App/Avatar/Avatar';\r\nimport style from './style.module.css';\r\n\r\nfunction Profile() {\r\n  const openProfileInfo = useParams()._id;\r\n\r\n  const openProfile = useSelector((state) => state.application.openProfile);\r\n\r\n  const profile = useSelector((state) =>\r\n    state.contacts.items.find((item) => openProfileInfo === item._id),\r\n  );\r\n\r\n  return (\r\n    <div className={openProfile ? style.profileOpen : style.profileClose}>\r\n      <div>\r\n        <Avatar size={'large'} fullname={profile} />\r\n        <div className={style.profileNameEmail}>\r\n          <div className={style.profileName}>{profile?.fullname}</div>\r\n          <div className={style.nick}>@{profile?.username}</div>\r\n          <Connection />\r\n        </div>\r\n      </div>\r\n      <Social socials={profile} />\r\n      <Media />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { loadMyId } from '../../redux/ducks/application';\r\nimport Chats from '../Sidebar';\r\nimport Messages from '../Messages';\r\nimport MyProfile from '../Profile';\r\nimport style from './../App/style.module.css';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const loading = useSelector((state) => state.application.loading);\r\n\r\n  useEffect(() => {\r\n    dispatch(loadMyId());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    !loading && (\r\n      <div className={style.appWrapper}>\r\n        <BrowserRouter>\r\n              <Route path=\"/:_id?\">\r\n            <Chats />\r\n               <Messages />\r\n            <MyProfile />\r\n          </Route>\r\n        </BrowserRouter>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/configureStore';\r\nimport App from './components/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myProfile\":\"style_myProfile__2z23o\",\"profileOpen\":\"style_profileOpen__AS_5n\",\"profileClose\":\"style_profileClose__2qTqg\",\"profileNameEmail\":\"style_profileNameEmail__1t8YA\",\"profileName\":\"style_profileName__1HFas\",\"nick\":\"style_nick__1G4Gh\",\"profileContactIcons\":\"style_profileContactIcons__jbBEL\",\"envelope\":\"style_envelope__3Ns1P\",\"phone\":\"style_phone__ssOoo\",\"videoCam\":\"style_videoCam__27Fqm\",\"profileSocial\":\"style_profileSocial__3zshX\",\"headSocial\":\"style_headSocial__3s1rN\",\"messenger\":\"style_messenger__113Js\",\"wrapMessenger\":\"style_wrapMessenger__3NZ_s\",\"instagram\":\"style_instagram__1aN50\",\"twitter\":\"style_twitter__1ejdo\",\"IconsAndSocialNickname\":\"style_IconsAndSocialNickname__ToU2N\",\"socialNickname\":\"style_socialNickname__1nC0v\",\"headMedia\":\"style_headMedia__122a0\",\"ImgPdfMedia\":\"style_ImgPdfMedia__lerDg\",\"imgMedia\":\"style_imgMedia__3cSQd\",\"pdf\":\"style_pdf__3TQmo\"};"],"sourceRoot":""}